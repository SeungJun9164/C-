#include <iostream>
#include <time.h>

enum AI_MODE {
	AI_EASY = 1,
	AI_HARD 
	
};

enum LINE_NUM
{
	LN_H1,
	LN_H2,
	LN_H3,
	LN_H4,
	LN_H5,
	LN_V1,
	LN_V2,
	LN_V3,
	LN_V4,
	LN_V5,
	LN_LT,
	LN_RT
};
using namespace std;
int main()
{
	//---------------------로또--------------
	/*srand((unsigned int)time(0));
	int iLotto[45] = {};

	for (int i = 0; i < 45; i++)
		iLotto[i] = i + 1;
	int temp, idx1, idx2;
	for (int i = 0; i < 100; i++)
	{
		idx1 = rand() % 45;
		idx2 = rand() % 45;

		temp = iLotto[idx1];
		iLotto[idx1] = iLotto[idx2];
		iLotto[idx2] = temp;
	}
	for (int i = 0; i < 6; i++)
		cout << iLotto[i] << "\t";*/

	//--------------------------빙고게임

	srand((unsigned int)time(0));
	int iNum[25], AINum[25];

	for (int i = 0; i < 25; i++)
	{
		iNum[i] = i + 1;
		AINum[i] = i + 1;
	}
	for (int i = 0; i < 100; i++)
	{
		int idx1 = rand() % 25;
		int idx2 = rand() % 25;

		int temp = iNum[idx1];
		iNum[idx1] = iNum[idx2];
		iNum[idx2] = temp;

		idx1 = rand() % 25;
		idx2 = rand() % 25;

		temp = AINum[idx1];
		AINum[idx1] = AINum[idx2];
		AINum[idx2] = temp;
	}
	int Bingo = 0, AIBingo = 0;
	int AIMode;

	while (1)
	{
		cout << "1. Easy               2. Hard" << endl;
		cout << "AI모드를 선택하세요 : ";
		cin >> AIMode;
		if (AIMode >= AI_EASY && AIMode <= AI_HARD)
			break;
	}

	int NoneSelect[25] = {};
	int NoneSelectCnt = 0;

	while (1)
	{
		cout << "==========================Player==========================" << endl;
		for (int i = 0; i < 5; i++)
		{
			for (int j = 0; j < 5; j++)
			{
				if (iNum[i * 5 + j] == INT_MAX)
					cout << "*\t";
				else
					cout << iNum[i * 5 + j] << "\t";
			}
			cout << endl;
		}
		
		cout << "Bingo Line : " << Bingo << endl;		

		cout << "===========================AI============================" << endl;
		for (int i = 0; i < 5; i++)
		{
			for (int j = 0; j < 5; j++)
			{
				if (AINum[i * 5 + j] == INT_MAX)
					cout << "*\t";
				else
					cout << AINum[i * 5 + j] << "\t";
			}
			cout << endl;
		}
		cout << "AIBingo Line : " << AIBingo << endl;

		if (Bingo >= 5)
		{
			cout << "Player승리!";
			break;
		}
		if (AIBingo >= 5)
		{
			cout << "AI승리!";
			break;
		}

		int input;
		cout << "숫자를 입력하세요 (0 : 종료) : ";
		cin >> input;

		if (input == 0)
			break;
		else if (input < 1 || input > 25)
			continue;

		bool bAcc = true;
		for (int i = 0; i < 25; i++)
		{
			if (input == iNum[i])
			{
				bAcc = false;
				iNum[i] = INT_MAX;
				break;
			}
		}
		if (bAcc)
			continue;

		for (int i = 0; i < 25; i++)
		{
			if (input == AINum[i])
			{
				//bAcc = false;
				AINum[i] = INT_MAX;
				break;
			}
		}
		switch (AIMode)
		{
		case AI_EASY:
			NoneSelectCnt = 0;
			for(int i=0;i<25;i++)
				if (AINum[i] != INT_MAX)
				{
					NoneSelect[NoneSelectCnt] = AINum[i];
					NoneSelectCnt++;
				}
			input = NoneSelect[rand() % NoneSelectCnt];
			break;
		case AI_HARD:
			int Line;
			int StarCnt = 0;
			int SaveCnt = 0;

			for (int i = 0; i < 5; i++)
			{
				StarCnt = 0;
				for (int j = 0; j < 5; j++)
				{
					if (AINum[i * 5 + j] == INT_MAX)
						StarCnt++;
				}
				if (StarCnt < 5 && SaveCnt < StarCnt)
				{
					Line = i;
					SaveCnt = StarCnt;
				}
			}

			for (int i = 0; i < 5; i++)
			{
				StarCnt = 0;
				for (int j = 0; j < 5; j++)
				{
					if (AINum[j * 5 + i] == INT_MAX)
						StarCnt++;
				}
				if (StarCnt < 5 && SaveCnt < StarCnt)
				{
					Line = i + 5;
					SaveCnt = StarCnt;
				}
			}
			StarCnt = 0;
			for(int i = 0; i < 25; i += 6)
			{
				if (AINum[i] == INT_MAX)
					StarCnt++;
			}
			if (StarCnt < 5 && SaveCnt < StarCnt)
			{
				Line = LN_LT;
				SaveCnt = StarCnt;
			}

			StarCnt = 0;
			for (int i = 4; i <= 20; i += 4)
			{
				if (AINum[i] == INT_MAX)
					StarCnt++;
			}
			if (StarCnt < 5 && SaveCnt < StarCnt)
			{
				Line = LN_RT;
				SaveCnt = StarCnt;
			}

			if (Line <= LN_H5)
			{
				for (int i = 0; i < 5; i++)
				{
					if (AINum[Line * 5 + i] != INT_MAX)
					{
						input = AINum[Line * 5 + i];
						break;
					}
				}
			}
			else if (Line <= LN_V5)
			{
				for (int i = 0; i < 5; i++)
				{
					if (AINum[i * 5 + Line] != INT_MAX)
					{
						input = AINum[i * 5 + (Line - 5)];
						break;
					}
				}
			}
			else if (Line == LN_LT)
			{
				for (int i = 0; i < 25; i += 6)
				{
					if (AINum[i] != INT_MAX)
					{
						input = AINum[i];
						break;
					}
				}
			}

			else if (Line == LN_RT)
			{
				for (int i = 0; i <= 20; i += 4)
				{
					if (AINum[i] != INT_MAX)
					{
						input = AINum[i];
						break;
					}
				}
			}

			break;
		
		}
		for (int i = 0; i < 25; i++)
		{
			if (input == iNum[i])
			{
				iNum[i] = INT_MAX;
				break;
			}
		}

		for (int i = 0; i < 25; i++)
		{
			if (input == AINum[i])
			{
				AINum[i] = INT_MAX;
				break;
			}
		}


		Bingo = 0, AIBingo = 0;
		int check1 = 0, check2 = 0;
		int AIcheck1 = 0, AIcheck2 = 0;
		for (int i = 0; i < 5; i++)
		{
			check1 = check2 = 0;
			AIcheck1 = AIcheck2 = 0;
			for (int j = 0; j < 5; j++)
			{
				if (iNum[i * 5 + j] == INT_MAX)
					check1++;
				if (iNum[j * 5 + i] == INT_MAX)
					check2++;

				if (AINum[i * 5 + j] == INT_MAX)
					AIcheck1++;
				if (AINum[j * 5 + i] == INT_MAX)
					AIcheck2++;
			}
			if (check1 == 5)
				Bingo++;	
			if (check2 == 5)
				Bingo++;

			if(AIcheck1 == 5)
				AIBingo++;
			if (AIcheck2 == 5)
				AIBingo++;
		}
		//대각선 왼쪽에서 오른쪽
		check1 = 0, AIcheck1 = 0;
		for (int i = 0; i < 25; i += 6)
		{
			if (iNum[i] == INT_MAX)
				check1++;
			if (AINum[i] == INT_MAX)
				AIcheck1++;
		}
		if (check1 == 5)
			Bingo++;
		if (AIcheck1 == 5)
			AIBingo++;

		//대각선 오른쪽에서 왼쪽
		check1 = 0, AIcheck1 = 0;
		for (int i = 4; i <= 20; i += 4)
		{
			if (iNum[i] == INT_MAX)
				check1++;
			if (AINum[i] == INT_MAX)
				AIcheck1++;
		}
		if (check1 == 5)
			Bingo++;
		if (AIcheck1 == 5)
			AIBingo++;
		system("cls");
	}
	return 0;
}
