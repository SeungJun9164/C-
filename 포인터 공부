포인터 선언 : 자료형* 포인터_변수명
메모리 번지 할당 : 포인터_변수명 = &변수명

	int x = 100;
	int* pt;
	pt = &x;

	cout << "x의 메모리 시작 주소 : " << &x << endl;                       //결과 : x의 주소
	cout << "pt가 가리키고 있는곳의 메모리 시작 주소 : " << pt << endl;     //결과 : x의 주소와 같다
	cout << "pt의 메모리 시작 주소 : " << &pt << endl;                     //결과 : pt의 주소
	cout << "pt가 가리키는 곳의 데이터 값 : " << *pt << endl;              //결과 : 100 
  
  전위++과 *는 연산자 우선순위가 같기 때문에 오른쪽에서 왼쪽으로 결합

	cout << "*pt+1 : " << *pt + 1 << endl;                                //결과 : 101 (포인터pt가 가리키는 곳의 데이터에 1증가)
	cout << "*(pt+1) : " << *(pt + 1) << endl;                            //결과 : 쓰레기값 (포인터pt가 가리키고 있는 주소 + 주소에 저장된 데이터)
	cout << "*pt++ : " << *pt++ << endl;                                  //결과 : 100 (포인터pt가 가리키는 곳의 데이터를 사용한 후 포인터pt에 저장된 주소값을 1증가)
	cout << "*++pt : " << *++pt << endl;                                  //결과 : 쓰레기값 (포인터pt가 가리키는 곳의 주소값을 1증가 시킨후 증가된 주소의 값을 사용)
  cout << "(*pt)++ : " << (*pt)++ << endl;                              //결과 : 100 (포인터pt가 가리키는 곳의 데이터를 사용한 후 그 값을 1 증가)
	cout << "*++pt : " << *++pt << endl;                                  //결과 : 쓰레기값 (포인터pt가 가리키는 곳의 주소값을 1 증가 시키고 증가된 주소값에 저장된 데이터를 사용)
  cout << "++*pt : " << ++*pt << endl;                                  //결과 : 101 (포인터pt가 가리키는 곳의 데이터에 1을 증가)
  
  *pt + 1 과 ++*pt는 같다.
